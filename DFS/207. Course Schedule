class Solution:
    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:
        
        
        #creat two lists one is for numcourses and the other one is prerequisites
        #graph search
        #graph
        graph = [[] for _ in range(numCourses)]
        visited = [0 for _ in range(numCourses)]
        
        for pre in prerequisites:
            graph[pre[0]].append(pre[1])
        
            
        for i in range(numCourses):
            if not self.dfs(graph,visited,i):
                return False
            
        return True
    
    def dfs(self,graph,visited,i):
        
        if visited[i]==-1:
            return False
        if visited[i]==1:
            return True
        
        visited[i]=-1
        for j in graph[i]:
            if not self.dfs(graph,visited,j):
                return False
        visited[i]=1
        
        return True
    
